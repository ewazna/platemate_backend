name: EC2 Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main'

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v2

      - run: npm ci

      - name: "Create .env file"
        run: |
          touch .env
          echo CLOUDINARY_NAME=${{ secrets.CLOUDINARY_NAME }} >> .env
          echo CLOUDINARY_KEY=${{ secrets.CLOUDINARY_KEY }} >> .env
          echo CLOUDINARY_SECRET=${{ secrets.CLOUDINARY_SECRET }} >> .env
          echo MONGO_DB_URI=${{ secrets.MONGO_DB_URI }} >> .env
          echo FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }} >> .env
          echo FIREBASE_PRIVATE_KEY_ID=${{ secrets.FIREBASE_PRIVATE_KEY_ID }} >> .env
          echo FIREBASE_PRIVATE_KEY=${{ secrets.FIREBASE_PRIVATE_KEY }} >> .env
          echo FIREBASE_CLIENT_EMAIL=${{ secrets.FIREBASE_CLIENT_EMAIL }} >> .env
          echo FIREBASE_CLIENT_ID=${{ secrets.FIREBASE_CLIENT_ID }} >> .env
          echo FIREBASE_AUTH_URI=${{ secrets.FIREBASE_AUTH_URI }} >> .env
          echo FIREBASE_TOKEN_URI=${{ secrets.FIREBASE_TOKEN_URI }} >> .env
          echo FIREBASE_AUTH_PROVIDER_X509_CERT_URL=${{ secrets.FIREBASE_AUTH_PROVIDER_X509_CERT_URL }} >> .env
          echo FIREBASE_CLIENT_X509_CERT_URL=${{ secrets.FIREBASE_CLIENT_X509_CERT_URL }} >> .env
          echo FIREBASE_UNIVERSE_DOMAIN=${{ secrets.FIREBASE_UNIVERSE_DOMAIN }} >> .env

      - run: npm run build

      - name: rsync deployments
        uses: burnett01/rsync-deployments@5.1
        with:
          switches: -avzr --delete --ignore-times --omit-dir-times --include="/node_modules/***" --include="/dist/***" --include="/package.json" --include="/package-lock.json" --include="/.env" --exclude="*"
          remote_path: /var/www/my-app/
          remote_host: ${{ secrets.EC2_HOST }}
          remote_user: ubuntu
          remote_key: "${{ secrets.EC2_SSH_PRIVATE_KEY }}"
